"""update users table

Revision ID: 17960ed7ebd9
Revises: bf4f06a063ae
Create Date: 2023-10-13 13:00:27.928551

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '17960ed7ebd9'
down_revision = 'bf4f06a063ae'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('first_name', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('last_name', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('role', sa.String(), nullable=True))
        batch_op.alter_column('_password_hash',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.create_unique_constraint('username_unique', ['username'])
        batch_op.drop_column('admin')
        batch_op.drop_column('name')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.VARCHAR(), nullable=False))
        batch_op.add_column(sa.Column('admin', sa.BOOLEAN(), nullable=False))
        batch_op.drop_constraint('username_unique', type_='unique')
        batch_op.alter_column('_password_hash',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.drop_column('role')
        batch_op.drop_column('last_name')
        batch_op.drop_column('first_name')
        batch_op.drop_column('username')

    # ### end Alembic commands ###
